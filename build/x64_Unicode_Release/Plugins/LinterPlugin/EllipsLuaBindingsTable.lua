return {
  globals = {
    CBlockDataObject = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    SchemaWrapper = { fields = {
      BuildFromString = {},
      BuildFromResource = {},
    }},
    tostring = {},
    gcinfo = {},
    Unit = { fields = {
      NumberOfDecimals = {},
      WeightType2String = {},
      FromMetric = {},
      GramsToWeight = {},
      GetWeightUnitTable = {},
      ToMetric = {},
      WeightString2Type = {},
      WeightToGrams = {},
      GetUnit = {},
    }},
    os = { fields = {
      exit = {},
      setlocale = {},
      date = {},
      getenv = {},
      difftime = {},
      remove = {},
      time = {},
      clock = {},
      tmpname = {},
      rename = {},
      execute = {},
    }},
    lw = { fields = {
      ZoomCtrl = {},
      CLuaHtmlView = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      CLuaButton = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      Grid = {},
      FileDialog = {},
      GetImageFromClipboard = {},
      RemoveIllegalFilenameCharacters = {},
      CLuaFloatSlider = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      CLuaPolygonLayer = { fields = {
        IsValid = {},
        New = {},
      }},
      CheckBox = {},
      CLuaCheckBox = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      CLuaDialog = { fields = {
        IsValid = {},
        New = {},
        IsControl = {},
      }},
      ImageLayer = {},
      CLuaBrushLayer = { fields = {
        New = {},
        IsValid = {},
      }},
      CLuaGrid = { fields = {
        IsValid = {},
        New = {},
        IsControl = {},
      }},
      GroupBox = {},
      CLuaStatic = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      CLuaImageView = { fields = {
        IsValid = {},
        New = {},
        IsControl = {},
      }},
      Button = {},
      KillTimer = {},
      CLuaGridSimple = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      FolderPickerDialog = {},
      HtmlView = {},
      Static = {},
      CLuaEdit = { fields = {
        IsValid = {},
        New = {},
        IsControl = {},
      }},
      BrushLayer = {},
      CopyTextToClipboard = {},
      FloatSlider = {},
      CLuaRadio = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      CopyImageToClipboard = {},
      FloatSpinEdit = {},
      GetKeyboardState = {},
      OpenGlViewer = {},
      CLuaZoomCtrl = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      ImageView = {},
      DialogEx = {},
      LayeredWnd = {},
      CLuaProgressBar = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      CLuaComboBox = { fields = {
        IsValid = {},
        New = {},
        IsControl = {},
      }},
      environment = { fields = {
        SetTimer = {},
        KillTimer = {},
      }},
      GridSimple = {},
      MultiFileDialog = {},
      CLuaImageLayer = { fields = {
        New = {},
        IsValid = {},
      }},
      ProgressBar = {},
      CLuaOpenGlViewer = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      NewControl = {},
      GetMainWnd = {},
      CLuaRangeSelection = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      SetTimer = {},
      FolderDialog = {},
      Scintilla = {},
      ComboBox = {},
      MessageBox = {},
      RangeSelection = {},
      GetTextFromClipboard = {},
      CLuaFloatSpinEdit = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      ChildDialog = {},
      CLuaScintilla = { fields = {
        IsValid = {},
        New = {},
        IsControl = {},
      }},
      CLuaGroupBox = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      Win32 = { fields = {
        MultiFileDialog = {},
        CopyTextToClipboard = {},
        FolderPickerDialog = {},
        GetTextFromClipboard = {},
        InputBox = {},
        MessageBox = {},
        CopyImageToClipboard = {},
        FileDialog = {},
        GetImageFromClipboard = {},
        FolderDialog = {},
        ColorDialog = {},
        GetKeyboardState = {},
        RemoveIllegalFilenameCharacters = {},
      }},
      InputBox = {},
      CLuaLayeredWnd = { fields = {
        IsValid = {},
        IsControl = {},
        New = {},
      }},
      Edit = {},
      Radio = {},
      IsControl = {},
      ColorDialog = {},
      DialogOld = {},
      PolygonLayer = {},
      Dialog = {},
    }},
    ImageBlocksInfo = { fields = {
      GetProjectName = {},
    }},
    CBackgroundSeparation = { fields = {
      ConstCast = {},
      IsValid = {},
      New = {},
    }},
    debug = { fields = {
      getupvalue = {},
      debug = {},
      getmetatable = {},
      setfenv = {},
      gethook = {},
      setlocal = {},
      sethook = {},
      traceback = {},
      getlocal = {},
      getinfo = {},
      setupvalue = {},
      setmetatable = {},
      getregistry = {},
      getfenv = {},
    }},
    SizeAlgorithms = { fields = {
      DetectDoubles = {},
      FindCalyx = {},
    }},
    ECompression = { fields = {
      CompressZlib = {},
      UncompressZlib = {},
    }},
    tonumber = {},
    CDraw = { fields = {
      PremultiplyAlpha = {},
      InvertAlpha = {},
      New = {},
    }},
    ImageblocksAutomation = { fields = {
      Simulation = { fields = {
        RecalculateNow = {},
      }},
    }},
    load = {},
    CLuaEfgChainTracer = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    module = {},
    _oldprint = {},
    any_detail = { fields = {
      empty = {},
    }},
    EMotionEstimation = { fields = {
      CalculateBlockDifferenceImage = {},
    }},
    CLinearExtrapolationObject = { fields = {
      ConstCast = {},
      IsValid = {},
      New = {},
    }},
    int32_t = {},
    CTec5Spectro = { fields = {
      ConstCast = {},
      IsValid = {},
      New = {},
    }},
    Binding = {},
    float = {},
    assert = {},
    xpcall = {},
    CTerminal = { fields = {
      IsValid = {},
    }},
    CWinComPort = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    coroutine = { fields = {
      resume = {},
      yield = {},
      status = {},
      wrap = {},
      create = {},
      running = {},
    }},
    std = { fields = {
      string = {},
    }},
    ImageBlocksEnvironment = { fields = {
      mEFG400Simulation = { fields = {
        GetSimulationCVRFileList = {},
        GetSimulationFileName = {},
        SetCupVideoResults = {},
        GetReferenceSpectra = {},
        GetCupVideoResults = {},
        GetSimulationCVRFileIndex = {},
        SelectCVRFile = {},
        RecalculateSchemas = {},
        LoadSimProj = {},
        GetProjectRoot = {},
        GetSimulationCVRFileName = {},
      }},
    }},
    PotatoTracker = { fields = {
      CMotionModel = { fields = {
        ConstCast = {},
        IsValid = {},
        New = {},
      }},
      CTrackerState = { fields = {
        IsValid = {},
        ConstCast = {},
        New = {},
      }},
    }},
    uint32_t = {},
    EAlg = { fields = {
      HoughTransform32 = {},
      RegionThinning = {},
      CircularHoughTransform = {},
      MinImagePoint = {},
      MaxImagePoint = {},
      SkeletonDecomposition = {},
      SkeletonFindEndPoints = {},
      PointChainInOutRegion = {},
      HoughTransform = {},
      SplitTracer = {},
      SkeletonFindJunctionPoints = {},
      PointChainEnclosingCircle = {},
    }},
    CETime = { fields = {
      date = {},
      GetCounter = {},
      CountersToTimeDifference = {},
      GetRunTime = {},
      GetCounterString = {},
      GetSysString = {},
    }},
    ImageRegion = { fields = {
      ScaleImage = {},
      FlipRegionVertical = {},
      DistanceTransform = {},
      ConditionalFloodFill = {},
      GuiHSVRainbow = {},
      ScaleIntensity = {},
      AverageIntensity = {},
      AverageColor = {},
      FillSameColors = {},
      IntensityAttributes = {},
      HSVPlanesHistogram = {},
      ToS8V8 = {},
      HalfSize = {},
      DownSampleSNN = {},
      DownSampleMedian = {},
      AdjustHSV = {},
      SplitHSV = {},
      NormalizeInt32ToY8 = {},
      GuiHSRainbow = {},
      RGB24ToH360S255V255 = {},
      IntegralMaxLowpass = {},
      GuiHSVtoRGB = {},
      GuiRGBToCIELuv = {},
      FillSameColorsY8 = {},
      CorrectIntensityFromLowpass = {},
      GuiHVRainbow = {},
      GuiRGBToHSV = {},
    }},
    BindingDumpResultDialog = {},
    getfenv = {},
    CAntiAliasedFontRenderer = { fields = {
      ConstCast = {},
      IsValid = {},
      New = {},
    }},
    ELuaBindings = { fields = {
      Checksum = {},
      Type = {},
      GetDeclaredFields = {},
      DeclareFields = {},
      ProtectTable = {},
      GetLuaBindings = {},
      UnprotectTable = {},
      ContextDump = {},
      ResetProfileData = {},
      CreateNewSharedImageView = {},
      RetrieveProfileData = {},
      OpenTable = {},
      Release = {},
      VarDump = {},
    }},
    CVertexCam = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    CLuaDataProvider = { fields = {
      New = {},
    }},
    UAC = { fields = {
      HasRight = {},
    }},
    doresource = {},
    pairs = {},
    LOG = {},
    CDataProvider = { fields = {
      IsValid = {},
      Exists = {},
      FromFile = {},
      ConstCast = {},
      Create = {},
      New = {},
    }},
    string = { fields = {
      sub = {},
      upper = {},
      gsub = {},
      gfind = {},
      gmatch = {},
      find = {},
      match = {},
      char = {},
      dump = {},
      len = {},
      reverse = {},
      byte = {},
      format = {},
      rep = {},
      lower = {},
    }},
    CVertexObject = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    setfenv = {},
    newproxy = {},
    EUdpSocket = { fields = {
      New = {},
    }},
    print = {},
    LuaUdpDeeplearning = { fields = {
      GetTimeStamp = {},
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    setmetatable = {},
    CFsObjectsInterface = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    ETimer = { fields = {
      GetTick = {},
      New = {},
      GetTimeStampNanoSeconds = {},
    }},
    table = { fields = {
      setn = {},
      insert = {},
      getn = {},
      foreachi = {},
      maxn = {},
      foreach = {},
      concat = {},
      remove = {},
      sort = {},
    }},
    EDataCrypt = { fields = {
      Decrypt = {},
      Encrypt = {},
      CRC32 = {},
    }},
    AlgTest = { fields = {
      MacBethRegionsFromY8Image = {},
      EfgForegroundRegion = {},
    }},
    require = {},
    loadstring = {},
    CScanAreaIntensityCorrectionProcessor = { fields = {
      ConstCast = {},
      IsValid = {},
      New = {},
    }},
    TrueCommon = { fields = {
      GetBuildInfo = {},
    }},
    CECompressedImage = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    next = {},
    CESpectralMeasurementData = { fields = {
      ConstCast = {},
      IsValid = {},
      New = {},
    }},
    Json = { fields = {
      TableToJsonString = {},
      Format = {},
      JsonStringToTable = {},
    }},
    trim = {},
    ipairs = {},
    double = {},
    TextMessaging = { fields = {
      Print = {},
      Connect = {},
      StopListen = {},
      Listen = {},
    }},
    rawequal = {},
    CEVRIMatrix2D = { fields = {
      Minus = {},
      IsValid = {},
      Plus = {},
      Times = {},
      Power = {},
      ConstCast = {},
      Rdivide = {},
      New = {},
    }},
    collectgarbage = {},
    CMemoryZipFile = { fields = {
      GetFileAsStreamFromZip = {},
      GetFileListFromZip = {},
    }},
    COrthogonalProjection = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    Vision = { fields = {
      Objects = { fields = {
        HistogramY8 = { fields = {
          ConstCast = {},
          IsValid = {},
          Equalize = {},
          New = {},
        }},
        PointF = { fields = {
          ConstCast = {},
          IsValid = {},
          New = {},
        }},
        Point = { fields = {
          IsValid = {},
          ConstCast = {},
          New = {},
        }},
        Region = { fields = {
          IsValid = {},
          FromWaterShed = {},
          FromInt16 = {},
          FromRegionY8 = {},
          FromRegionInt16 = {},
          FromY8 = {},
          FromPointChain = {},
          ConstCast = {},
          FromPointCloud = {},
          New = {},
        }},
        IntensityProfile = { fields = {
          IsValid = {},
          ConstCast = {},
          FromArray = {},
          FromImage = {},
          New = {},
        }},
        Rect = { fields = {
          IsValid = {},
          ConstCast = {},
          New = {},
        }},
        Polynomial = { fields = {
          IsValid = {},
          ConstCast = {},
          New = {},
        }},
        PointChain3D = { fields = {
          ConstCast = {},
          IsValid = {},
          New = {},
        }},
        Line = { fields = {
          ConstCast = {},
          IsValid = {},
          New = {},
        }},
        LineEquation = { fields = {
          ConstCast = {},
          IsValid = {},
          New = {},
        }},
        Image = { fields = {
          FromString = {},
          Rgb24FromR8G8B8 = {},
          LoadBmp = {},
          IsValid = {},
          TypeToString = {},
          New = {},
          ConstCast = {},
          FromRawString = {},
          StringToType = {},
        }},
        SizeCalibrationProcessor = { fields = {
          ConstCast = {},
          IsValid = {},
          New = {},
        }},
        PointChain = { fields = {
          IsValid = {},
          ConstCast = {},
          New = {},
        }},
        Point3DF = { fields = {
          ConstCast = {},
          IsValid = {},
          New = {},
        }},
        Point3D = { fields = {
          IsValid = {},
          ConstCast = {},
          New = {},
        }},
      }},
      Algorithms = { fields = {
        RegionManipulation = { fields = {
          DilateErode = {},
          RemoveHoles = {},
          GetTotalHoleSize = {},
          RemoveHolesFrom = {},
        }},
        GaussianFilters = { fields = {
          GaussianFilter = {},
          GaussianFIRSecondDerivative = {},
          GaussianDerivative = {},
          GaussianFIRFilter = {},
          GaussianSecondDerivative = {},
          GaussianFIRDerivative = {},
        }},
        ImageFilters = { fields = {
          SobelMagnitudeExact = {},
          Emboss2DAbs = {},
          SobelMagnitude = {},
          Clahe = {},
        }},
        RegionStatistics = { fields = {
          CalculatePrincipalComponents = {},
          ComputeGeometricMoments = {},
          ComputeSecondOrderCentralMoments = {},
        }},
        LocalBinaryPattern = { fields = {
          LocalBinaryPattern = {},
          LocalBinaryContrast = {},
          ExtendedIntegralLocalBinaryPattern = {},
        }},
        ImageFalseColor = { fields = {
          FalseColorConverter = { fields = {
            IsValid = {},
            ConstCast = {},
            New = {},
          }},
        }},
        PointChainConversion = { fields = {
          StringToPointChain = {},
          PointChainToString = {},
        }},
        IntegralImages = { fields = {
          CalculateNewPitDepthImageSSE = {},
          CalculateNewHillHeightImage = {},
          IntegralDeviationDistanceRGB32 = {},
          CalculateNewHillHeightImageSSE = {},
          IntegralDeviationMap = {},
          IntegralImageMasked = {},
          CalculateNewPitDepthImage = {},
          IntegralImageMaskedRGB32 = {},
          IntegralDeviationMapSSE = {},
          IntegralDeviationDistanceRGB32SSE = {},
        }},
        RegionGeometry = { fields = {
          ProjectQuadList = {},
          ProjectDonutQuadList = {},
          ProjectDonut = {},
        }},
        IntensityProfiles = { fields = {
          IntensityProfileFromImage = {},
        }},
        LeastSquaresFitting = { fields = {
          LeastSquaresFitting = {},
        }},
        PointChainManipulation = { fields = {
          CreateNormal = {},
          Simplify = {},
        }},
        ImageObjectDetection = { fields = {
          FitCircleOnBrightestSlices = {},
        }},
        PointChainGeometry = { fields = {
          AlgabraicCircleFit = {},
          EllipseFitting = {},
          FindCenterlineDebug = {},
          CenterlineNormalDiameter = {},
          FindDents = {},
          MinMaxPerpendicularDiameter = {},
          FindCenterline = {},
          MinMaxDiameter = {},
          InterpolatedCenterlineDiameter = {},
        }},
      }},
      Experimental = { fields = {
        Algorithms = { fields = {
          HyperSpectral = { fields = {
            AverageImageStack = {},
            ImageMedian3x3 = {},
            FlatFieldImage = {},
            GetRawData = {},
            RotateDataCube = {},
            SubSampleImage = {},
            FlatFieldImageStack = {},
          }},
          PointChainGeometry = { fields = {
            CalculateParametricDistances = {},
          }},
          ImageFilters = { fields = {
            ConstantOrderMedianFilter = {},
            IntegralRegionMedianFilter = {},
            IntegralImageStack = {},
            UnitVarianceScaling = {},
            CalculateRegionIntegralImage = {},
            NaiveMedianFilter = {},
          }},
          Jseg = { fields = {
            Quantize = {},
          }},
          ImageObjectDetection = { fields = {
            DetectLaserLine = {},
            StegerRidgeIntermediateData = { fields = {
              ConstCast = {},
              IsValid = {},
              New = {},
            }},
          }},
          PointChain3DGeometry = { fields = {
            CreateParametricApproximation = {},
            LocateClosestApproach = {},
          }},
        }},
        Objects = { fields = {
          LaserTriangulation = { fields = {
            IsValid = {},
            ConstCast = {},
            New = {},
          }},
        }},
      }},
    }},
    CAsparagusFlower = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    rawset = {},
    pcall = {},
    CCameraOffsetCalculator = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    getmetatable = {},
    SystemConfiguration = { fields = {
      GetSpectrometerUnits = {},
      GetUnitsSystem = {},
      GetLaneCount = {},
      GetScanAreas = {},
      GetLicenses = {},
      GetRotationFactor = {},
    }},
    CScanAreaPurpose = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    unpack = {},
    cjson = { fields = {
      encode = {},
      decode_max_depth = {},
      decode_invalid_numbers = {},
      encode_keep_buffer = {},
      encode_number_precision = {},
      encode_max_depth = {},
      encode_sparse_array = {},
      encode_invalid_numbers = {},
      decode = {},
      new = {},
    }},
    TrueSort = { fields = {
      SaveCurrentGradingProgram = {},
      GetSortVariety = {},
      SetMeasureMethodUnit = {},
      GetMeasureMethod = {},
      ASyncSaveCvrFile = {},
      FileContentToTable = {},
      SetMeasureMethodDisplayName = {},
      LoadCvrFile = {},
      SaveCvrFile = {},
      RegisterNewResultsCallback = {},
      GetGradingResults = {},
      RegisterRestoreCVRCallback = {},
      PrintFileContent = {},
      CVRRequest = { fields = {
        GetLane = {},
        RegisterStatusCallback = {},
        RegisterFullCupsOnlyCallback = {},
        SetRequestInterval = {},
        SetPause = {},
        GetCVR = {},
        SetCvrType = {},
        RegisterLaneCallback = {},
        GetStatus = {},
        RegisterPauseCallback = {},
        SetMeasureModule = {},
        RegisterCVRCallback = {},
        GetFullCupsOnly = {},
        SetFullCupsOnly = {},
        SetLane = {},
        GetPause = {},
      }},
      GetStrippedCVR = {},
      LoadSpectrometerGraphReplyMessage = {},
      GetActiveMethods = {},
    }},
    TrueSortAlgorithms = { fields = {
      Algorithms = { fields = {
        SpectralReference = { fields = {
          ConvertSlideReferenceIntoTheoreticBallReference = {},
          CalculateEffectiveReference = {},
          ConvertBallReferenceIntoTheoreticSlideReference = {},
        }},
        SpectralSignatures = { fields = {
          DetectMaterialFromSpectrum = {},
          FitCalibrationBallSpectrum = {},
        }},
        SymmetricalRelationMap = { fields = {
          CalculateClusters = {},
          ExtractMaximalClique = {},
        }},
        Pear = { fields = {
          FindStem = {},
        }},
        Cucumber = { fields = {
          ProcessLaserLines = {},
        }},
        SpectralMeasurement = { fields = {
          Divide = {},
          FilterSGolayDeriv1 = {},
          ConvertToLog10 = {},
          FlatField = {},
          Multiply = {},
          Average = {},
          ConvertToAbsorbance = {},
          FilterExtended = {},
          FilterSGolayDeriv2 = {},
          FindZeroCrossings = {},
          GetExtrema = {},
          FilterSimpleDerivative = {},
          Crop = {},
          DotProduct = {},
          DetectOverExposure = {},
          FilterSGolay = {},
          Resample = {},
          ScaleIntensity = {},
          GetMaxValue = {},
          FilterLowPassExtended = {},
          Subtract = {},
          FilterSGolayDeriv3 = {},
          Filter = {},
          GetDCBlackLevel = {},
          OffsetIntensity = {},
          FilterSimpleAverage = {},
          Add = {},
        }},
      }},
      Objects = { fields = {
        SymmetricalRelationMap = { fields = {
          ConstCast = {},
          IsValid = {},
          New = {},
        }},
      }},
    }},
    bit = { fields = {
      band = {},
      rshift = {},
      bor = {},
      bnot = {},
      bswap = {},
      bxor = {},
      tobit = {},
      rol = {},
      lshift = {},
      tohex = {},
      arshift = {},
      ror = {},
    }},
    math = { fields = {
      log = {},
      acos = {},
      ldexp = {},
      deg = {},
      abs = {},
      tanh = {},
      cos = {},
      rad = {},
      tan = {},
      cosh = {},
      modf = {},
      random = {},
      frexp = {},
      randomseed = {},
      ceil = {},
      floor = {},
      exp = {},
      max = {},
      sqrt = {},
      sinh = {},
      asin = {},
      min = {},
      mod = {},
      fmod = {},
      log10 = {},
      atan2 = {},
      atan = {},
      sin = {},
      pow = {},
    }},
    CRGB24Spectrum = { fields = {
      ConstCast = {},
      IsValid = {},
      New = {},
    }},
    Language = { fields = {
      LoadLanguageFile = {},
      LoadForCurrentFile = {},
      GetCurrentLanguage = {},
      SetCurrentLanguage = {},
      LoadForFile = {},
    }},
    CMachinePosition = { fields = {
      ConstCast = {},
      IsValid = {},
      New = {},
    }},
    bool = {},
    type = {},
    CMemPoolAnalysis = { fields = {
      ConstCast = {},
      IsValid = {},
      RegisterLayer = {},
      New = {},
    }},
    ETcpSocket = { fields = {
      New = {},
    }},
    select = {},
    efc3 = { fields = {
      logger = { fields = {
        Log = {},
        Print = {},
        SetMinSeverityLevel = {},
      }},
    }},
    LibTorchInference = { fields = {
      IsValid = {},
      ConstCast = {},
      New = {},
    }},
    rawget = {},
    EAnySerializer = { fields = {
      ToStringOld = {},
      ToAnyContentString = {},
      FromStringOld = {},
      FromString = {},
      FromAnyContentString = {},
      ToString = {},
    }},
    CResourceLocator = { fields = {
      GetScriptFile = {},
      FindFilesWithExtension = {},
      GetAbsoluteFilename = {},
      GetWorkingFolder = {},
      Exists = {},
      SetUpdateHandler = {},
      Open = {},
      Load = {},
      GetScriptFolder = {},
    }},
    io = { fields = {
      popen = {},
      write = {},
      close = {},
      flush = {},
      open = {},
      output = {},
      read = {},
      input = {},
      lines = {},
      type = {},
      tmpfile = {},
    }},
    dofile = {},
    gl = { fields = {
      FrontFace = {},
      GetString = {},
      TexCoord = {},
      ColorPointer = {},
      Light = {},
      Normal = {},
      GetError = {},
      PixelZoom = {},
      StencilOp = {},
      IsEnabled = {},
      GetTexGen = {},
      IsList = {},
      VertexPointer = {},
      MatrixMode = {},
      LightModel = {},
      PushMatrix = {},
      ReadBuffer = {},
      PointSize = {},
      IndexPointer = {},
      Material = {},
      GetClipPlane = {},
      GetTexParameter = {},
      MapGrid = {},
      SelectBuffer = {},
      PassThrough = {},
      AreTexturesResident = {},
      PushName = {},
      CopyTexImage = {},
      PopAttrib = {},
      DepthRange = {},
      GetPolygonStipple = {},
      Translate = {},
      ReadPixels = {},
      DrawArrays = {},
      Hint = {},
      GenLists = {},
      InitNames = {},
      PixelTransfer = {},
      Flush = {},
      PopName = {},
      BindTexture = {},
      GetTexEnv = {},
      Viewport = {},
      CallList = {},
      Disable = {},
      ClearDepth = {},
      GetPixelMap = {},
      PolygonStipple = {},
      ColorMask = {},
      LoadName = {},
      EndList = {},
      ColorMaterial = {},
      StencilFunc = {},
      ClearAccum = {},
      PixelStore = {},
      ClearStencil = {},
      Get = {},
      ClearColor = {},
      Scale = {},
      CopyTexSubImage = {},
      TexCoordPointer = {},
      Scissor = {},
      Accum = {},
      LoadIdentity = {},
      GetTexLevelParameter = {},
      DepthMask = {},
      GetConst = {},
      GetMaterial = {},
      GetMap = {},
      EvalMesh = {},
      CopyPixels = {},
      MultMatrix = {},
      LineWidth = {},
      Color = {},
      BlendFunc = {},
      ClearIndex = {},
      PushClientAttrib = {},
      IndexMask = {},
      Map = {},
      DrawElements = {},
      Begin = {},
      Frustum = {},
      ShadeModel = {},
      DeleteTextures = {},
      DrawBuffer = {},
      Enable = {},
      RenderMode = {},
      PixelMap = {},
      PolygonMode = {},
      EvalPoint = {},
      DeleteLists = {},
      FeedbackBuffer = {},
      EdgeFlagPointer = {},
      TexParameter = {},
      Clear = {},
      CullFace = {},
      LoadMatrix = {},
      Ortho = {},
      Bitmap = {},
      TexGen = {},
      TexSubImage = {},
      Fog = {},
      PopMatrix = {},
      NewList = {},
      ClipPlane = {},
      Finish = {},
      RasterPos = {},
      DrawPixels = {},
      Index = {},
      LogicOp = {},
      End = {},
      PushAttrib = {},
      GetPointer = {},
      LineStipple = {},
      GenTextures = {},
      NormalPointer = {},
      GetTexImage = {},
      AlphaFunc = {},
      GetLight = {},
      TexEnv = {},
      EnableClientState = {},
      Vertex = {},
      StencilMask = {},
      GetArray = {},
      PolygonOffset = {},
      ArrayElement = {},
      IsTexture = {},
      PopClientAttrib = {},
      TexImage = {},
      EvalCoord = {},
      CallLists = {},
      Rect = {},
      ListBase = {},
      EdgeFlag = {},
      PrioritizeTextures = {},
      Rotate = {},
      DepthFunc = {},
      DisableClientState = {},
    }},
    BlockEnvironment = { fields = {
      RegisterCoroutine = {},
      AddString = {},
      GetStringId = {},
      GetString = {},
    }},
    error = {},
    loadfile = {},
  }
}
